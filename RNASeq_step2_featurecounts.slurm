#!/bin/bash

#SBATCH --job-name="FeatureCounts"                      # Job name for identification
#SBATCH --mail-user=feargal.ryan@sahmri.com             # Email notifications
#SBATCH --mail-type=ALL                                 # Notify on job start, end, and failure
#SBATCH --output=featureCounts_all_samples_%j.log       # Log file with job ID (%j will be replaced with job ID)
#SBATCH --error=featureCounts_all_samples_%j.err        # Error file with job ID (%j will be replaced with job ID)
#SBATCH --exclude=hpc-lin-cmp04,hpc-lin-cmp06           # Exclude specific nodes from the job

#SBATCH --nodes=1                                       # Request one node for the job
#SBATCH --ntasks=1                                      # Request one task (single job instance)
#SBATCH --cpus-per-task=28                              # Allocate 28 CPU cores for the job
#SBATCH --mem=30G                                       # Allocate 30 GB of memory
#SBATCH --time=48:15:25                                 # Set time limit to 48 hours, 15 minutes, 25 seconds

# Author: Feargal Ryan
# Date: September 2024
# GitHub: https://github.com/feargalr/
# Email: feargalr@gmail.com
# Description: This script runs FeatureCounts to quantify gene expression from BAM files generated by HISAT2 alignment.
# The output is a count matrix where rows represent genes and columns represent samples.
# NB - This is meant to be run after alignments are generated for all samples. 

# Load Conda environment containing FeatureCounts
source /homes/feargal.ryan/anaconda3/etc/profile.d/conda.sh
conda activate /homes/feargal.ryan/anaconda3/envs/rnaseq

# Step 1: Run FeatureCounts
# -s 1: Specify that the data is strand-specific, where 1 indicates the reverse strand.
# -p: Indicates that the data is paired-end.
# --countReadPairs: Counts read pairs instead of individual reads.
# -T 28: Use 28 threads for parallel processing.
# -t gene: Specify the feature type to count (gene).
# -g gene_id: Specify the attribute type to group by (gene_id).
# -a: Specify the annotation file in GTF format.
# -o: Output file to store the count matrix.
# The final argument specifies the input BAM files generated by HISAT2.
featureCounts -s 1 -p --countReadPairs -T 28 -t gene -g gene_id \
-a /homes/feargal.ryan/databases/grch38/Homo_sapiens.GRCh38.109.gtf \
-o featureCounts_all_samples.txt */*hisat2.sorted.bam

